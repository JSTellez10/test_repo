library(tseries)
library(astsa)
library(forecast)
install.packages("tseries")
install.packages("astsa")
install.packages("forecast")
install.packages("astsa")
library(tseries)
library(astsa)
library(forecast)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(tseries)
library(astsa)
library(forecast)
install.packages("rlang")
install.packages("rlang")
library(tseries)
library(astsa)
library(forecast)
remove.packages(rlang)
install.packages("pacman")
require("pacman")
p_load("tseries","astsa","forecast","tidyverse","lubridate","foreign","quantmod","xts","timsac","vars","mFilter","dynlm","nlme","stats","car","urca","vars","lmtest","readxl","tsDyn","TSstudio","broom","kableExtra","knitr","MASS","parallel","mlogit","dplyr","tidyr","fpp2","readxl","strucchange")
install.packages("forecast")
library(forecast)
install.packages("rlang")
install.packages("rlang")
library(rlang)
install.packages("forecast")
library(forecast)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
library(forecast)
library(rlang)
sessionInfo()
remove.packages(rlang)
install.packages("forecast")
library(forecast)
library(tseries)
library(astsa)
library(forecast)
library(tidyverse)
install.packages("pacman")
require("pacman")
p_load("tseries","astsa","forecast","tidyverse","lubridate","foreign","quantmod","xts","timsac","vars","mFilter","dynlm","nlme","stats","car","urca","vars","lmtest","readxl","tsDyn","TSstudio","broom","kableExtra","knitr","MASS","parallel","mlogit","dplyr","tidyr","fpp2","readxl","strucchange")
library(forecast)
library(tidyverse)
library(tidyverse)
install.packages("cli")
library(tidyverse)
library(tseries)
library(astsa)
library(forecast)
library(tidyverse)
library(lubridate)
library(foreign)
library(quantmod)
library(xts)
library(timsac)
library(vars)
library(mFilter)
library(dynlm)
library(nlme)
library(stats)
library(car)
library(urca)
library(vars)
library(lmtest)
library(readxl)
library(tsDyn)
library(TSstudio)
library(broom)
library(kableExtra)
library(knitr)
library(MASS)
library(parallel)
library(mlogit)
library(dplyr)
library(tidyr)
library(fpp2)
library(readxl)
library(strucchange)
library(readxl)
DATOS_CANAS <- read_excel("~/Documents/Sebastian Tellez/2023/Enero 2023/Proyecciones canastas/DATOS_CANAS.xlsx")
View(DATOS_CANAS)
attach(DATOS_CANAS)
names(DATOS_CANAS)
library(readxl)
DATOS_IPC <- read_excel("~/Documents/Sebastian Tellez/2023/Enero 2023/Proyecciones canastas/DATOS_IPC.xlsx")
View(DATOS_IPC)
attach(DATOS_IPC)
names(DATOS_IPC)
LNCOMIDAS = log(DATOS_CANAS$COMIDAS)
COMIDAS = ts(LNCOMIDAS, start = c(2009,1), frequency = 12)
IPC_COMIDAS = ts(DATOS_IPC$IPC_COMIDAS, start = c(2009,1), frequency = 12)
MODELO1 <- auto.arima(COMIDAS, stepwise = FALSE, approximation = FALSE)
summary(MODELO1)
autoplot(MODELO1)
COF1 = coef(MODELO1)
DEV_ES = sqrt(diag(vcov(MODELO1)))
Z1 = COF1/DEV_ES
Z1 #valores mayores a 2 en terminos absolutos son significativos
plot(forecast(MODELO1,h=12, fan=F))
lines(fitted(MODELO1), col="red")
F1 = forecast(MODELO1,h=12, fan=F)
F1
MODELO1 <- auto.arima(IPC_COMIDAS, stepwise = FALSE, approximation = FALSE)
summary(MODELO1)
autoplot(MODELO1)
COF1 = coef(MODELO1)
DEV_ES = sqrt(diag(vcov(MODELO1)))
Z1 = COF1/DEV_ES
Z1 #valores mayores a 2 en terminos absolutos son significativos
plot(forecast(MODELO1,h=12, fan=F))
lines(fitted(MODELO1), col="red")
F1 = forecast(MODELO1,h=12, fan=F)
F1
## llamar la librería pacman: contiene la función p_load()
require(pacman)
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest) # web-scraping
## Acceder al robots.txt de wikipedia
browseURL("https://en.wikipedia.org/robots.txt")
rm(list = ls())
## llamar la librería pacman: contiene la función p_load()
require(pacman)
## p_load llama/instala-llama las librerías que se enlistan:
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest) # web-scraping
library(pacman)
## p_load llama/instala-llama las librerías que se enlistan:
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest) # web-scraping
Copa_mundo_url <- "https://es.wikipedia.org/wiki/Copa_Mundial_de_F%C3%BAtbol"
rm(list = ls())
require("pacman")
p_load("tseries","astsa","forecast","tidyverse","lubridate","foreign","quantmod","xts","timsac","vars","mFilter","dynlm","nlme","stats","car","urca","vars","lmtest","readxl","tsDyn","TSstudio","broom","kableExtra","knitr","MASS","parallel","mlogit","dplyr","tidyr","fpp2","readxl","strucchange")
library(readxl)
DATOS_CANAS <- read_excel("~/Documents/Sebastian Tellez/2023/Enero 2023/Proyecciones canastas/DATOS_CANAS.xlsx")
View(DATOS_CANAS)
attach(DATOS_CANAS)
names(DATOS_CANAS)
attach(DATOS_IPC)
names(DATOS_IPC)
LNNACIONAL = log(DATOS_CANAS$NACIONAL)
LNALIMENTOS = log(DATOS_CANAS$ALIMENTOS)
LNCOMIDAS = log(DATOS_CANAS$COMIDAS)
NACIONAL = ts(LNNACIONAL, start = c(2009,1), frequency = 12)
ALIMENTOS = ts(LNALIMENTOS, start = c(2009,1), frequency = 12)
COMIDAS = ts(LNCOMIDAS, start = c(2009,1), frequency = 12)
MODELO1 <- auto.arima(NACIONAL, stepwise = FALSE, approximation = FALSE)
summary(MODELO1)
autoplot(MODELO1)
COF1 = coef(MODELO1)
DEV_ES = sqrt(diag(vcov(MODELO1)))
Z1 = COF1/DEV_ES
Z1 #valores mayores a 2 en terminos absolutos son significativos
plot(forecast(MODELO1,h=12, fan=F))
lines(fitted(MODELO1), col="red")
plot(forecast(MODELO1,h=12, fan=F))
lines(fitted(MODELO1), col="red")
F1 = forecast(MODELO1,h=12, fan=F)
F1
